---
title: "Wrangling NBC News Articles"
subtitle: "STAT 231: Blog App"
author: "Maigan Lafontant, Emilie Ward, and Erika Salvador"
format: 
  pdf
header-includes: |
  \usepackage{fvextra}
  \DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\{\}}
---

```{r}
#| label: setup
#| include: false

# set code chunk option defaults
knitr::opts_chunk$set(
  # display code as types
  tidy = FALSE, 
  # slightly smaller code font
  size = "small",
  # do not display messages in PDF
  message = FALSE,
# improve digit and NA display 
  options(scipen = 1, knitr.kable.NA = ''))

# Load required libraries
library(tidyverse)
library(httr)
library(readr)
library(stringr)
library(tibble)
library(kableExtra)
library(colorspace)
library(jsonlite)
library(lubridate)
```

## 1. Read and Prepare Raw JSON

The JSON file `nyt_news_data.json` was scraped from The New York Times using a Python-based Tor-enabled web scraper. It includes article-level information such as titles, dates, body text, links, and images.

```{r}
#| label: step-1

## =================================================================
# Step 1: Read and Prepare Raw JSON (flatten = FALSE)
# =================================================================
# Note: Setting flatten = FALSE is important here.
#       It preserves nested structure and prevents JSON explosion,
#       which allows for faster and more manageable parsing downstream.

# Load JSON scraped from Python
nyt_news <- fromJSON("../data/nyt_news_data.json", flatten = FALSE)

# Preview structure
glimpse(nyt_news)

# Combine all the little data.frames into one big tibble
nyt_news_df <- map_dfr(nyt_news, as_tibble)

# View structure
glimpse(nyt_news_df)
```

## 2. Subset Metadata

In this step, we subset and clean the raw The New York Times News data to retain only the important metadata fields needed for our analysis. Specifically, we extract the article title, description, full text, publication date, URL, and author information. The `publicationDate` field is simplified by selecting only the first timestamp per article. 

```{r}
#| label: step-2

# =================================================================
# Step 2: Subset Metadata
# =================================================================

nyt_meta <- nyt_news_df |>
  as_tibble() |>
  mutate(
    
  )
```

## 3. Filter Articles by Publication Year (2020-2024)

In this step, we subset the dataset to include only articles published between 2020 and 2024. We first convert the `publicationDate` string into a proper datetime object using `lubridate::ymd_hms()`, then retain only those entries whose year falls within our desired range.

```{r}
#| label: step-3

# =================================================================
# Step 3: Filter Articles by Publication Year (2020-2024)
# =================================================================

nyt_meta2 <- nyt_meta |>
  # Parse publication date (DATE ONLY)
  mutate(pub_date = lubridate::ymd(publicationDate)) |>
  
  # Keep articles from 2020â€“2024
  filter(lubridate::year(pub_date) >= 2020,
         lubridate::year(pub_date) <= 2024) |>
  
  # Add Roe v. Wade overturning label
  mutate(roe_status = if_else(
    pub_date < as_date("2022-06-24"), 
    "Pre-Roe", 
    "Post-Roe"
  )) |>
  
  # Drop original unparsed column
  select(-publicationDate)
```

## 4. Clean Article Text


```{r}
#| label: step-4

# =================================================================
# Step 4: Clean Article Text
# =================================================================


```

```
