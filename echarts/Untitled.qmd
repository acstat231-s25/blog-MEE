---
title: "Untitled"
format: html
---

```{r}
library(tidyverse)
library(stringr)

library(readr)

fox <- read_csv("../data/wrangled/fox_news_data_wrangled.csv")
nyt <- read_csv("../data/wrangled/nyt_news_data_wrangled.csv")


# Define U.S. state names (capitalize first letter)
us_states <- state.name

# Compile regex pattern for word-boundary match
state_pattern <- str_c("\\b(", str_c(us_states, collapse = "|"), ")\\b")

# Function to extract all state matches from text
extract_states <- function(text) {
  str_extract_all(text, regex(state_pattern, ignore_case = TRUE)) |> unlist()
}

# Apply to each article in NYT and Fox
state_mentions_df <- bind_rows(
  fox |> mutate(outlet = "Fox"),
  nyt |> mutate(outlet = "NYT")
) |> 
  select(outlet, pub_date, text_clean) |> 
  mutate(doc_id = row_number(),
         matched_states = map(text_clean, extract_states)) |> 
  unnest(matched_states) |> 
  mutate(state = str_to_title(matched_states)) |> 
  filter(state %in% us_states) |> 
  count(outlet, state, sort = TRUE)

library(knitr)

state_mentions_df |>
  head(20) |>  # optional: limit to top 20
  kable(caption = "Top U.S. State Mentions by News Outlet (2020–2024)")
```

```{r}
library(echarts4r.maps)


```

```{r}
# =======================
# Load required libraries
# =======================
library(tidyverse)
library(stringr)
library(readr)
library(knitr)
library(echarts4r)
library(echarts4r.maps)
library(dplyr)

# ===============================
# Step 1: Read cleaned article data
# ===============================
fox <- read_csv("../data/wrangled/fox_news_data_wrangled.csv")
nyt <- read_csv("../data/wrangled/nyt_news_data_wrangled.csv")

# =============================================
# Step 2: Extract U.S. state mentions from text
# =============================================
us_states <- state.name

state_pattern <- str_c("\\b(", str_c(us_states, collapse = "|"), ")\\b")

extract_states <- function(text) {
  str_extract_all(text, regex(state_pattern, ignore_case = TRUE)) |> unlist()
}

state_mentions_df <- bind_rows(
  fox |> mutate(outlet = "Fox"),
  nyt |> mutate(outlet = "NYT")
) |>
  select(outlet, pub_date, text_clean) |>
  mutate(doc_id = row_number(),
         matched_states = map(text_clean, extract_states)) |>
  unnest(matched_states) |>
  mutate(state = str_to_title(matched_states)) |>
  filter(state %in% us_states) |>
  count(outlet, state, sort = TRUE)

# ===========================
# Step 3: Display as a table
# ===========================
state_mentions_df |>
  head(20) |>
  kable(caption = "Top U.S. State Mentions by News Outlet (2020–2024)")

# =============================
# Step 4: Prepare map data
# =============================
nyt_map_data <- state_mentions_df |>
  filter(outlet == "NYT") |>
  select(state, n)

fox_map_data <- state_mentions_df |>
  filter(outlet == "Fox") |>
  select(state, n)

# NYT map
nyt_map_data |>
  e_charts(state) |>
  em_map("USA") |>
  e_map(n, map = "USA", name = "NYT Mentions") |>
  e_visual_map(
    n,
    orient = "horizontal",
    left = "center",
    calculable = FALSE,
    inRange = list(color = c("#fff7bc", "#fc4e2a"))  # yellow to red scale
  ) |>
  e_title("NYT State Mentions (2020–2024)")

# Fox map
fox_map_data |>
  e_charts(state) |>
  em_map("USA") |>
  e_map(n, map = "USA", name = "Fox Mentions") |>
  e_visual_map(
    n,
    orient = "horizontal",
    left = "center",
    calculable = FALSE,
    inRange = list(color = c("#fff7bc", "#fc4e2a"))
  ) |>
  e_title("Fox State Mentions (2020–2024)")


```
