---
title: "Before (and After) Roe v. Wade: A Content Analysis of Conservative and Liberal Media on Abortion Legislation in the United States, 2020–2024"
subtitle: "Exploring Sentiment, Framing, and State-Level Policy Intersections in U.S. News Coverage"
author: 
- "Erika Salvador"
- "Emilie Ward"
- "Maigan Lafontant"
abstract: "This blog investigates how abortion is framed in the media by analyzing coverage from two ideologically opposed outlets: Fox News and The New York Times. Using text and sentiment analysis, topic modeling, and geographic policy data from the Guttmacher Institute, we examine shifts in media narratives before and after the 2022 Supreme Court decision in Dobbs v. Jackson Women’s Health Organization."
editor: 
  markdown: 
    wrap: 72
---

```{r}
#| label: setup
#| include: false

# =================================================================
# Setup: Global Options and Libraries
# =================================================================

# Set code chunk defaults for cleaner output
knitr::opts_chunk$set(
  tidy = FALSE,                # Preserve code formatting
  size = "small",              # Use slightly smaller font for code
  message = FALSE,             # Suppress messages in output
  options(scipen = 1,          # Prefer standard numeric formatting (no scientific notation)
          knitr.kable.NA = '') # Display empty cells instead of "NA" in tables
)

# Load required libraries
library(tidytext)
library(dplyr)
library(widyr)
library(igraph)
library(ggraph)
library(tibble)
library(readr)
library(lubridate)  
library(ggridges)
library(gganimate)
library(magick)
library(ggplot2)
library(tidyr)
library(plotly)
library(forcats)
library(ggTimeSeries)
library(zoo)
library(data.table)
library(RColorBrewer)
library(scico)  
library(patchwork)
library(showtext)
library(ggiraph)
library(gdtools)
library(gfonts)

# Load cleaned datasets
nyt <- read_csv("../data/wrangled/nyt_news_data_wrangled.csv")
fox <- read_csv("../data/wrangled/fox_news_data_wrangled.csv")
## guttmacher <- read_csv("../data/Guttmatcher_institute_data/guttmacher_file.csv")  

# Combine NYT and Fox together
articles <- bind_rows(
  nyt |> mutate(outlet = "The New York Times"),
  fox |> mutate(outlet = "Fox News")
) |> 
  mutate(pub_date = as.Date(pub_date)) |> 
  filter(!is.na(pub_date))
```

```{r}
#| label: initial-tokens
#| include: false

# Tokenize text into individual words
tokens <- bind_rows(
  nyt |> mutate(outlet = "NYT"),
  fox |> mutate(outlet = "Fox")
) |>
  unnest_tokens(word, text) |>
  anti_join(stop_words)  # Remove standard English stop words first

# Additional stop words
custom_stopwords <- tibble(word = c(
  "said", "ms", "mr", "mrs",
  "fox", "news", "nyt", "new", "york", "times",
  "u.s", "one", "two", "also", "would", "including", "don’t", "that’s", "it’s", "wrote", "told",
  "roe"
))
```

```{r}
#| label: clean-tokens
#| include: false

# Tokenize and remove both standard and custom stop words
tokens2 <- bind_rows(
  nyt |> mutate(outlet = "NYT"),
  fox |> mutate(outlet = "Fox")
) |>
  unnest_tokens(word, text) |>
  anti_join(stop_words) |>         # Remove standard English stop words
  anti_join(custom_stopwords)      # Remove custom filler/irrelevant words
```

```{r}
#| label: monthly-data
#| include: false

monthly_data <- articles |> 
  mutate(month = floor_date(pub_date, unit = "month")) |> 
  count(outlet, month, name = "monthly_n") |> 
  arrange(outlet, month) |> 
  group_by(outlet) |> 
  mutate(cumulative_n = cumsum(monthly_n)) |> 
  ungroup()

facet_data <- monthly_data |> 
  pivot_longer(
    cols = c(monthly_n, cumulative_n),
    names_to = "measure",
    values_to = "n"
  ) |> 
  mutate(measure = recode(
    measure,
    monthly_n = "Monthly Volume",
    cumulative_n = "Cumulative Coverage"
  ))
```

```{r}
#| label: color-choices-yay

# Color palette 
fill_colors <- c(
  "Fox News" = "#fccfd1",
  "The New York Times" = "#bfd7ea"
)

line_colors <- c(
  "Fox News" = "#e57373",
  "The New York Times" = "#5a8ca4"
)
```

```{r}
#| label: themes
#| include: false

# Load News Cycle from Google Fonts
font_add_google("News Cycle")
showtext_auto()

gdtools::register_gfont("News Cycle")
```

## Introduction

Long a topic of debate across law, medicine, gender, and religion,
abortion has remained one of the most polarizing issues in American
public life. That polarization deepened in June 2022, when the Supreme
Court’s decision in Dobbs v. Jackson Women’s Health Organization
overturned Roe v. Wade, the 1973 ruling that had established a
constitutional right to abortion. The decision unsettled not only the
legal framework around abortion, but also the way the issue is discussed
across the country. As states move in sharply different directions,
media coverage has had to grapple with new divisions, new language, and
new stakes.

At its core, the public debate still turns on a simple but deeply
charged question: **is abortion good or bad?** How that question gets
answered–or even framed–depends heavily on where one looks. News
coverage of abortion varies sharply by ideological leaning. Conservative
media outlets often emphasize religious and legal arguments by focusing
on fetal personhood, state-level bans, and moral appeals
\citep{jenssen2013broadcast}. In contrast, liberal media frequently
frame abortion in terms of bodily autonomy, healthcare access, and
gender justice, while emphasizing the disproportionate impact of
abortion restrictions on marginalized communities
\citep{rohlinger2015abortion}. These competing narratives do more than
reflect existing viewpoints but actively shape public perception of
abortion legislation.

In this blog, we examine how abortion is framed by two ideologically
distinct media outlets: Fox News and The New York Times. To trace how
these narratives evolved, we analyzed abortion-related news coverage
from both sources before and after the Dobbs decision. These platforms
were chosen not only for their national prominence and broad audiences,
but also for their well-documented political leanings–\href{https://www.foxnews.com}{Fox News} is widely recognized as a conservative outlet, while \href{https://www.nytimes.com}{The New York Times} is identified as liberal-leaning \citep{pew2014,mitchell2020}. By comparing these two sources, we aim to better understand how media framing
reflects and reinforces broader ideological divides around abortion.We also use geographic data from the \href{https://www.guttmacher.org}{Guttmacher Institute}, a leading research and policy organization on reproductive health. Using text and sentiment analysis, topic modeling, and geographic data from the Guttmacher Institute, we explore how media narratives align
with state-level abortion laws and how discourse evolves in response to
shifting legal landscapes.

## A First Look at the Coverage

We collected a total of `r nrow(articles)` abortion-related news
articles for this analysis. Of these, `r nrow(fox)` were published by
Fox News and the remaining `r nrow(nyt)` by The New York Times, spanning
from early 2020 through late 2024. Together, these articles provide a
window into how two major media outlets approached abortion coverage
across a period of significant legal and political change.

```{r}
#| label: eda-graph
#| warnings: false
#| mesages: false
#| fig.height: 5.5

#| label: eda-graph
#| warnings: false
#| messages: false
#| fig.height: 5.5

# Add unique point-level data_id and tooltip
facet_data <- facet_data |>
  mutate(
    tooltip_text = paste0(outlet, "\n", measure, "\nMonth: ", format(month, "%b %Y"), "\nArticles: ", n),
    data_id = paste(outlet, measure, format(month, "%Y-%m"), n, sep = "_")
  )

# Final interactive plot
coverage_trend_plot <- ggplot(facet_data, aes(x = month, y = n, group = outlet)) +
  geom_area_interactive(
    aes(
      fill = outlet,
      tooltip = tooltip_text,
      data_id = data_id
    ),
    alpha = 0.35, position = "identity"
  ) +
  geom_line_interactive(
    aes(
      color = outlet,
      tooltip = tooltip_text,
      data_id = data_id
    ),
    linewidth = 1.2
  ) +
  # NEW: Add invisible points to enable precise tooltips
  geom_point_interactive(
    aes(
      color = outlet,
      tooltip = tooltip_text,
      data_id = data_id
    ),
    size = 2, alpha = 0  # keep them invisible but interactive
  ) +
  geom_vline(
    xintercept = as.Date("2022-06-24"),
    linetype = "dashed",
    color = "gray40",
    linewidth = 0.8
  ) +
  facet_wrap(~measure, scales = "free_y", ncol = 1, strip.position = "top") +
  scale_fill_manual(values = fill_colors) +
  scale_color_manual(values = line_colors) +
  scale_x_date(date_breaks = "1 month", date_labels = "%b'%y") +
  labs(
    title = "Abortion-Related Article Coverage Over Time",
    x = "Date", y = "Number of Articles",
    fill = "Outlet", color = "Outlet"
  ) +
  theme_light() +
  theme(
    text = element_text(family = "News Cycle"),
    plot.title = element_text(face = "bold", size = 18),
    legend.position = "top",
    legend.title = element_blank(),
    strip.background = element_rect(fill = "#666666", color = NA),
    strip.text = element_text(color = "white", face = "bold", family = "News Cycle"),
    panel.border = element_rect(color = "gray50", fill = NA),
    axis.title.y = element_text(size = 12),
    axis.text.x = element_text(size = 6, angle = 90, hjust = 1, family = "News Cycle"),
    panel.spacing = unit(1.2, "lines"),
    plot.margin = margin(10, 15, 10, 15)
  )

# Interactive render
girafe(
  ggobj = coverage_trend_plot,
  options = list(
    opts_hover(css = "stroke-width:2;"),
    opts_tooltip(css = "background-color:white;padding:5px;border:1px solid gray;border-radius:4px;font-family:'News Cycle';"),
    opts_toolbar(saveaspng = TRUE),
    opts_sizing(rescale = TRUE)
  )
)
```

To trace how attention fluctuated over time, we first examined monthly
trends in article publication. Both Fox News and The New York Times
exhibited visible surges in abortion-related reporting across the
2020-2024 period. While our primary focus is on the Dobbs v. Jackson
Women’s Health Organization decision and its aftermath, earlier spikes
in coverage are also notable. Attention intensified sharply in September
2021 with the enactment of Texas’s SB8 “heartbeat bill”, surged again in
May 2022 when Politico leaked the Supreme Court’s draft opinion in
Dobbs, and peaked in June 2022 when the Court officially overturned Roe
v. Wade. Additional upticks are visible during the November 2022 midterm
elections, where abortion rights featured prominently on state ballots,
and during the August 2023 Ohio special election focused on abortion
protections.

Interestingly, while monthly patterns highlight media reactions to
specific events, they do not fully capture the overall scale of
coverage. To provide a cumulative perspective, we plotted the running
total of abortion-related articles over time. Although The New York
Times often displayed sharper monthly peaks, the cumulative view reveals
a different story: over the long term, Fox News produced a significantly
larger volume of abortion-related coverage. Following the Dobbs
decision, the total number of articles rose sharply for both outlets,
but Fox News continued to publish abortion-related content at a faster
pace. By the end of 2024, Fox News had amassed a much larger body of
coverage compared to The New York Times.

## A Calendar of Changing Narratives

To understand how language and sentiment around abortion shifted in the
media before and after the Supreme Court’s landmark decision in Dobbs v.
Jackson Women’s Health Organization, we mapped article sentiment scores
across the two major outlets in a calendar heatmap format spanning 2020
to 2024.

### Fox News

```{r}
#| label: fox-calendar
#| echo: false

# Tokenize and assign article ID
fox <- as.data.table(fox)

article_words <- fox |>
  select(pub_date, text_clean) |>
  mutate(article_id = row_number()) |>
  unnest_tokens(word, text_clean)

# Join with AFINN sentiment lexicon
afinn <- get_sentiments("afinn")

article_scores <- article_words |>
  inner_join(afinn, by = "word") |>
  group_by(article_id, pub_date) |>
  summarise(article_sentiment = sum(value), .groups = "drop")

# Floor timestamps, then average per day
fox_sentiment <- article_scores |>
  mutate(pub_day = as.Date(pub_date)) |>
  group_by(pub_day) |>
  summarise(sentiment_score = mean(article_sentiment), .groups = "drop") |>
  rename(date = pub_day) |>
  as.data.table()

# Create calendar covering all real article dates
calendar_fox <- data.table(
  date = seq(min(fox_sentiment$date), max(fox_sentiment$date), by = "day")
)

# Merge + interpolate missing values
calendar_fox <- merge(calendar_fox, fox_sentiment, by = "date", all.x = TRUE)
calendar_fox[, sentiment_score := na.approx(sentiment_score, na.rm = FALSE)]
calendar_fox[is.na(sentiment_score), sentiment_score := 0]

# Add calendar features
calendar_fox[, ':='(
  Year = as.integer(format(date, "%Y")),
  month = as.integer(format(date, "%m")),
  week = as.integer(format(date, "%V"))
)]
calendar_fox[is.na(week) | week <= 0, week := 1]

# Create labels for month axis
MonthLabels <- calendar_fox[, .(meanWkofYr = mean(week)), by = month][
  , month := month.abb[month]
]

# Dynamically compute sentiment range for color scale
range_max <- ceiling(max(abs(calendar_fox$sentiment_score), na.rm = TRUE))

#: Plot final calendar heatmap
ggplot(data = calendar_fox, aes(date = date, fill = sentiment_score)) + 
  stat_calendar_heatmap(colour = "grey80", linewidth = 0.1) + 
  scale_fill_gradient2(
    low = "#cf1322",
    mid = "white",
    high = "#003f5c",
    midpoint = 0,
    limits = c(-range_max, range_max),
    breaks = c(-100, 0, 100),
    labels = c("More Negative", "Neutral", "More Positive"),
    name = "Sentiment"
  ) + 
  labs(fill = "Sentiment Score") +
  guides(fill = guide_colorbar(
    direction = "horizontal",
    title.position = "top",
    title.hjust = 0.5,
    barwidth = 15,
    barheight = 0.8,
    label = TRUE,
    ticks = TRUE,
    label.position = "bottom"
  )) +
  scale_y_continuous(
    name = NULL,
    breaks = seq(7, 1, -1),
    labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")
  ) + 
  scale_x_continuous(
    name = NULL,
    breaks = MonthLabels$meanWkofYr,
    labels = MonthLabels$month,
    expand = c(0, 0)
  ) + 
  facet_wrap(~Year, ncol = 1, strip.position = "right") + 
  theme(
    panel.background = element_blank(),
    panel.border = element_blank(),
    strip.background = element_blank(),
    strip.text = element_text(size = 13, face = "plain", color = "black"),
    axis.line = element_line(colour = "black", linewidth = 0.25),
    axis.title = element_text(size = 10, face = "plain", color = "black"),
    axis.text = element_text(size = 10, face = "plain", color = "black"),
    legend.position = "bottom"
  )


```

### The New York Times

```{r}
#| label: nyt-calendar
#| echo: false

# Tokenize and assign article ID
nyt <- as.data.table(nyt)

article_words_nyt <- nyt |>
  select(pub_date, text_clean) |>
  mutate(article_id = row_number()) |>
  unnest_tokens(word, text_clean)

# Join with AFINN sentiment lexicon
afinn <- get_sentiments("afinn")

article_scores_nyt <- article_words_nyt |>
  inner_join(afinn, by = "word") |>
  group_by(article_id, pub_date) |>
  summarise(article_sentiment = sum(value), .groups = "drop")

# Floor timestamps, then average per day
nyt_sentiment <- article_scores_nyt |>
  mutate(pub_day = as.Date(pub_date)) |>
  group_by(pub_day) |>
  summarise(sentiment_score = mean(article_sentiment), .groups = "drop") |>
  rename(date = pub_day) |>
  as.data.table()

# Create calendar covering all real article dates
calendar_nyt <- data.table(
  date = seq(min(nyt_sentiment$date), max(nyt_sentiment$date), by = "day")
)

# Merge + interpolate missing values
calendar_nyt <- merge(calendar_nyt, nyt_sentiment, by = "date", all.x = TRUE)
calendar_nyt[, sentiment_score := na.approx(sentiment_score, na.rm = FALSE)]
calendar_nyt[is.na(sentiment_score), sentiment_score := 0]

# Add calendar features
calendar_nyt[, ':='(
  Year = as.integer(format(date, "%Y")),
  month = as.integer(format(date, "%m")),
  week = as.integer(format(date, "%V"))
)]
calendar_nyt[is.na(week) | week <= 0, week := 1]

# Create labels for month axis
MonthLabels_nyt <- calendar_nyt[, .(meanWkofYr = mean(week)), by = month][
  , month := month.abb[month]
]

# Dynamically compute sentiment range for color scale
range_max_nyt <- ceiling(max(abs(calendar_nyt$sentiment_score), na.rm = TRUE))

ggplot(data = calendar_nyt, aes(date = date, fill = sentiment_score)) + 
  stat_calendar_heatmap(colour = "grey80", linewidth = 0.1) + 
  scale_fill_gradient2(
    low = "#cf1322",
    mid = "white",
    high = "#003f5c",
    midpoint = 0,
    limits = c(-range_max, range_max),
    breaks = c(-100, 0, 100),
    labels = c("More Negative", "Neutral", "More Positive"),
    name = "Sentiment"
  ) + 
  labs(fill = "Sentiment Score") +
  guides(fill = guide_colorbar(
    direction = "horizontal",
    title.position = "top",
    title.hjust = 0.5,
    barwidth = 15,
    barheight = 0.8,
    label = TRUE,
    ticks = TRUE,
    label.position = "bottom"
  )) +
  scale_y_continuous(
    name = NULL,
    breaks = seq(7, 1, -1),
    labels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")
  ) + 
  scale_x_continuous(
    name = NULL,
    breaks = MonthLabels$meanWkofYr,
    labels = MonthLabels$month,
    expand = c(0, 0)
  ) + 
  facet_wrap(~Year, ncol = 1, strip.position = "right") + 
  theme(
    panel.background = element_blank(),
    panel.border = element_blank(),
    strip.background = element_blank(),
    strip.text = element_text(size = 13, face = "plain", color = "black"),
    axis.line = element_line(colour = "black", linewidth = 0.25),
    axis.title = element_text(size = 10, face = "plain", color = "black"),
    axis.text = element_text(size = 10, face = "plain", color = "black"),
    legend.position = "bottom"
  )


```
